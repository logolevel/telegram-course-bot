require('dotenv').config();
const { Telegraf, session } = require('telegraf');
const express = require('express');

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ Express
const bot = new Telegraf(process.env.BOT_TOKEN);
const app = express();

// –í–∏–¥–µ–æ—Ñ–∞–π–ª—ã –∏–∑ Telegram (File_ID)
const video1 = 'BAACAgIAAxkBAAMDaBzV1qo0HMIY0_kM48OIZ1bRZeEAAiKCAAJuhuhIzHUqNWbJSW42BA';
const video2 = 'BAACAgIAAxkBAAMEaBzZK1T4cQ4e--QkxlBdVXQxOckAAg-DAAJuhuhI3zbkNVXIC482BA';
const video3 = 'BAACAgIAAxkBAAMFaBzZkbsXNKEyOy_-d7-nknnitaYAApeDAAJuhuhIRwGRAAFJfFTKNgQ';

const adminId = '373532023'; // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Å—Å–∏–∏
bot.use(session());

// üîß –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ctx.session
bot.use((ctx, next) => {
	if (!ctx.session) ctx.session = {};
	return next();
});

// –≠—Ç–∞–ø 1
bot.start(async (ctx) => {
	ctx.session.step = 1;

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏—è
	const videoMsg = await ctx.replyWithVideo(video1, { caption: '–≠—Ç–∞–ø 1: –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ' });
	ctx.session.step1VideoId = videoMsg.message_id;

	// –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–î–∞–ª–µ–µ"
	const buttonMsg = await ctx.reply('–ö–æ–≥–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–∏—à—å ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–î–∞–ª–µ–µ¬ª', {
		reply_markup: {
			inline_keyboard: [[{ text: '–î–∞–ª–µ–µ', callback_data: 'step1_done' }]],
		},
	});
	ctx.session.step1ButtonId = buttonMsg.message_id;
});

// –≠—Ç–∞–ø 2
bot.action('step1_done', async (ctx) => {
	// –£–¥–∞–ª–∏–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–≤–∏–¥–µ–æ –∏ –∫–Ω–æ–ø–∫—É)
	try {
		if (ctx.session.step1VideoId) await ctx.deleteMessage(ctx.session.step1VideoId);
		if (ctx.session.step1ButtonId) await ctx.deleteMessage(ctx.session.step1ButtonId);
	} catch (e) {
		console.warn('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —ç—Ç–∞–ø–∞ 1:', e.message);
	}

	ctx.session.step = 2;

	// –í–∏–¥–µ–æ –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–∞–ø–∞
	const videoMsg = await ctx.replyWithVideo(video2, {
		caption: '–≠—Ç–∞–ø 2: –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ',
	});
	ctx.session.step2VideoId = videoMsg.message_id;

	// –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ"
	const buttonMsg = await ctx.reply('–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ ‚Äî –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ', {
		reply_markup: {
			inline_keyboard: [[{ text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ', callback_data: 'send_photo' }]],
		},
	});
	ctx.session.step2ButtonId = buttonMsg.message_id;
});

// –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
bot.action('send_photo', async (ctx) => {
	await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–æ–æ–±—â–µ–Ω–∏–µ–º üì∑');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
bot.on('photo', async (ctx) => {
	if (ctx.session.step === 2) {
		const photo = ctx.message.photo.pop();
		const targetUserId = adminId;

		try {
			await ctx.telegram.sendPhoto(targetUserId, photo.file_id, {
				caption: `–§–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}`,
			});
		} catch (err) {
			console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ:', err);
			await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∞–¥—Ä–µ—Å–∞—Ç—É.');
			return;
		}

		// –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–∞–ø–∞ 2
		try {
			if (ctx.session.step2VideoId) await ctx.deleteMessage(ctx.session.step2VideoId);
			if (ctx.session.step2ButtonId) await ctx.deleteMessage(ctx.session.step2ButtonId);
		} catch (e) {
			console.warn('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —ç—Ç–∞–ø–∞ 2:', e.message);
		}

		ctx.session.step = 3;
		await ctx.replyWithVideo(video3, {
			caption: '–≠—Ç–∞–ø 3: –§–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –∏ —Å—Å—ã–ª–∫–∞: https://example.com',
		});
	}
});


// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
app.use(bot.webhookCallback('/secret-path'));
bot.telegram.setWebhook(`${process.env.BOT_URL}/secret-path`);

// –ó–∞–ø—É—Å–∫ Express-—Å–µ—Ä–≤–µ—Ä–∞
app.listen(process.env.PORT || 3000, () => {
	console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Railway');
});
