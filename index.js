require('dotenv').config();
const { Telegraf, session } = require('telegraf');
const express = require('express');

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ Express
const bot = new Telegraf(process.env.BOT_TOKEN);
const app = express();

// –í–∏–¥–µ–æ—Ñ–∞–π–ª—ã –∏–∑ Telegram (File_ID)
const video1 = 'BAACAgIAAxkBAAMDaBzV1qo0HMIY0_kM48OIZ1bRZeEAAiKCAAJuhuhIzHUqNWbJSW42BA';
const video2 = 'BAACAgIAAxkBAAMEaBzZK1T4cQ4e--QkxlBdVXQxOckAAg-DAAJuhuhI3zbkNVXIC482BA';
const video3 = 'BAACAgIAAxkBAAMFaBzZkbsXNKEyOy_-d7-nknnitaYAApeDAAJuhuhIRwGRAAFJfFTKNgQ';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Å—Å–∏–∏
bot.use(session());

// üîß –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ctx.session
bot.use((ctx, next) => {
	if (!ctx.session) ctx.session = {};
	return next();
});

// –≠—Ç–∞–ø 1
bot.start(async (ctx) => {
	ctx.session.step = 1;
	await ctx.replyWithVideo(video1, { caption: '–≠—Ç–∞–ø 1: –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ' });

	const msg = await ctx.reply('–ö–æ–≥–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–∏—à—å ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–î–∞–ª–µ–µ¬ª', {
		reply_markup: {
			inline_keyboard: [[{ text: '–î–∞–ª–µ–µ', callback_data: 'step1_done' }]],
		},
	});

	ctx.session.step1MessageId = msg.message_id; // –∑–∞–ø–æ–º–Ω–∏–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
});

// –≠—Ç–∞–ø 2: –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è ¬´–î–∞–ª–µ–µ¬ª
bot.action('step1_done', async (ctx) => {
	try {
		// –£–¥–∞–ª–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π ¬´–î–∞–ª–µ–µ¬ª
		if (ctx.session.step1MessageId) {
			await ctx.deleteMessage(ctx.session.step1MessageId);
		}
	} catch (e) {
		console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —ç—Ç–∞–ø–∞ 1:', e.message);
	}

	ctx.session.step = 2;
	await ctx.replyWithVideo(video2, {
		caption: '–≠—Ç–∞–ø 2: –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ',
	});

	// –î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ¬ª
	await ctx.reply('–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ ‚Äî –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ', {
		reply_markup: {
			inline_keyboard: [[{ text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ', callback_data: 'send_photo' }]],
		},
	});
});

// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ
bot.action('send_photo', async (ctx) => {
	await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä—è–º–æ —Å—é–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ–º üì∑');
});

// –ü—Ä–∏—ë–º —Ñ–æ—Ç–æ
bot.on('photo', async (ctx) => {
	if (ctx.session.step === 2) {
		const photo = ctx.message.photo.pop();
		const targetUsername = '@dzaviriukha'; // –∏–ª–∏ user ID

		try {
			await ctx.telegram.sendPhoto(targetUsername, photo.file_id, {
				caption: `–§–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${ctx.from.username || ctx.from.id}`,
			});
		} catch (err) {
			console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ:', err);
			await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∞–¥—Ä–µ—Å–∞—Ç—É.');
			return;
		}

		ctx.session.step = 3;
		await ctx.replyWithVideo(video3, {
			caption: '–≠—Ç–∞–ø 3: –§–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –∏ —Å—Å—ã–ª–∫–∞: https://example.com',
		});
	}
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
app.use(bot.webhookCallback('/secret-path'));
bot.telegram.setWebhook(`${process.env.BOT_URL}/secret-path`);

// –ó–∞–ø—É—Å–∫ Express-—Å–µ—Ä–≤–µ—Ä–∞
app.listen(process.env.PORT || 3000, () => {
	console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Railway');
});
